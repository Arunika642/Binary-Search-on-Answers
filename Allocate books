import java.util.*;
public class Solution {
    public static int findPages(ArrayList<Integer> arr, int n, int m) {
       
         if (m > n) return -1; // Not enough books for all students

    int low = Collections.max(arr); // Maximum pages in a single book
    int high = arr.stream().mapToInt(Integer::intValue).sum(); // Total pages in all books
    int result = -1;


        while(low<=high)
        {
            int mid=low+(high-low)/2;
            
            if(func(arr,mid,n,m))
            {
                high=mid-1;
            }
            else
            {
                low=mid+1;
            }
        }
        return low;
    }

    static boolean func(ArrayList<Integer> arr, int pages,int n,int m)
    {
        int student=1, pagesholds=0;
        for(int i=0; i<n;i++)
        {
            if(pagesholds+arr.get(i)<=pages)
            {
            pagesholds+=arr.get(i);
            }
            else
            {
                student++;
                pagesholds=arr.get(i);
            }

            if(student>m) return false;
        }
        return true;
    }
}
