class Solution {

    public double findMedianSortedArrays(int[] nums1, int[] nums2) {

        int n = nums1.length+nums2.length;
        int ind1 = (n/2)-1;
        int ind2 = (n/2);
        int cnt = 0, index1el=Integer.MIN_VALUE,index2el=Integer.MIN_VALUE,i=0,j=0;
        while(i<nums1.length && j<nums2.length)
        {
            if(nums1[i]<=nums2[j])
            {
                if(cnt==ind1) index1el=nums1[i];
                if(cnt==ind2) index2el=nums1[i];
                cnt++;
                i++;
            }
            else
            {
                if(cnt==ind1) index1el=nums2[j];
                if(cnt==ind2) index2el=nums2[j];
                cnt++;
                j++;
            }
        }
        while(i<nums1.length)
        {
            if(cnt==ind1) index1el=nums1[i];
            if(cnt==ind2) index2el=nums1[i];
            cnt++;
            i++;
        }
        while(j<nums2.length)
        {
            if(cnt==ind1) index1el=nums2[j];
            if(cnt==ind2) index2el=nums2[j];
            cnt++;
            j++;
        }
        if(n%2==1) return (double)index2el;
        return ((double)index1el+(double)index2el)/2;
    }
}
